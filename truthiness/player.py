# AUTOGENERATED! DO NOT EDIT! File to edit: player.ipynb (unless otherwise specified).

__all__ = ['run', 'Random']

# Cell
import numpy as np
from truthiness import gym

# Cell
def run(player, num_episode=10, env_name="ShameGame1", **env_kwargs):
    """Run a set of games"""

    # Get the env
    Env = getattr(env_name, gym)

    # Init logging

    # !
    for n in range(num_episodes):
        # Reconfig the env
        maze = create_maze(8, k=5, t=10)
        env = Env(maze=maze, **env_kwargs)

        # Reset
        x, y, Q, E = env.reset()
        done = False

        # -
        while not done:
            x, y = player(E, Q, env.moves())
            state, reward, done, _ = env.step((x, y))
            x, y, Q, E = state

        # Log data

# Cell
class Random:
    def __init__(self, prng=None):
        if prng is None:
            self.prng = np.random.RandomState()
        else:
            self.prng = prng

    def __call__(self, moves):
        return self.forward(moves)

    def forward(self, E, Q, moves):
        i = self.prng.randint(0, len(moves))
        move = moves[i]

        return move